package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"context"
	"log"

	"github.com/RSO-project-Prepih/AI-service/graph/model"
	"github.com/RSO-project-Prepih/AI-service/handlers"
)

// FetchFamousPlaces is the resolver for the fetchFamousPlaces field.
func (r *queryResolver) FetchFamousPlaces(ctx context.Context) ([]*model.Place, error) {
	places, err := handlers.FetchFamousPlaces()
	if err != nil {
		log.Printf("Error fetching famous places: %s", err)
		return nil, err
	}

	var gqlPlaces []*model.Place
	for _, p := range places {
		gqlPlace := &model.Place{
			Name:        p.Properties.Name,
			Rate:        p.Properties.Rate,
			Kinds:       p.Properties.Kinds,
			Type:        p.Geometry.Type,
			Coordinates: p.Geometry.Coordinates,
		}
		gqlPlaces = append(gqlPlaces, gqlPlace)
	}
	return gqlPlaces, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
type Resolver struct{}

func (r *Resolver) Mutation() MutationResolver {
	return &mutationResolver{r}
}

type mutationResolver struct{ *Resolver }
